name: Build and push Docker images

on:
  schedule:
  - cron: '42 5 * * *'
  push:
    branches:
    - '**'
    tags:
    - 'v*.*.*'
  pull_request:
    branches:
    - '**'

jobs:
  build-and-push:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
        - branch: main
          typo3-version: dev-master
        - branch: 11.x
          typo3-version: 11
        - branch: 10.x
          typo3-version: 10
        - branch: 9.x
          typo3-version: 9
        - branch: main
          node-version: 14
        - branch: main
          node-version: 12
        - branch: main
          node-version: 10

    env:
      IMAGE_NAME: t3easy/typo3
      PLATFORMS: linux/amd64,linux/arm64
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ matrix.branch }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to DockerHub
      uses: docker/login-action@v1
      if: github.event_name != 'pull_request'
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push web-development
      uses: docker/build-push-action@v2
      if: ${{ matrix.typo3-version }}
      with:
        build-args: |
          TARGET_ENVIRONMENT=development
        context: .
        file: .docker/Dockerfile
        tags: |
          ${{ env.IMAGE_NAME }}:web-${{ matrix.typo3-version }}-dev
          ghcr.io/${{ env.IMAGE_NAME }}:web-${{ matrix.typo3-version }}-dev
        target: web-development
        platforms: ${{ env.PLATFORMS }}
        push: ${{ github.event_name != 'pull_request' }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Build and push php-development
      uses: docker/build-push-action@v2
      if: ${{ matrix.typo3-version }}
      with:
        build-args: |
          TARGET_ENVIRONMENT=development
        context: .
        file: .docker/Dockerfile
        tags: |
          ${{ env.IMAGE_NAME }}:typo3-${{ matrix.typo3-version }}-dev
          ghcr.io/${{ env.IMAGE_NAME }}:typo3-${{ matrix.typo3-version }}-dev
        target: php-development
        platforms: ${{ env.PLATFORMS }}
        push: ${{ github.event_name != 'pull_request' }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Build and push web-production
      uses: docker/build-push-action@v2
      if: ${{ matrix.typo3-version }}
      with:
        context: .
        file: .docker/Dockerfile
        tags: |
          ${{ env.IMAGE_NAME }}:web-${{ matrix.typo3-version }}
          ghcr.io/${{ env.IMAGE_NAME }}:web-${{ matrix.typo3-version }}
        target: web-production
        platforms: ${{ env.PLATFORMS }}
        push: ${{ github.event_name != 'pull_request' }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Build and push php-production
      uses: docker/build-push-action@v2
      if: ${{ matrix.typo3-version }}
      with:
        context: .
        file: .docker/Dockerfile
        tags: |
          ${{ env.IMAGE_NAME }}:typo3-${{ matrix.typo3-version }}
          ghcr.io/${{ env.IMAGE_NAME }}:typo3-${{ matrix.typo3-version }}
        target: php-production
        platforms: ${{ env.PLATFORMS }}
        push: ${{ github.event_name != 'pull_request' }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Build and push node
      uses: docker/build-push-action@v2
      if: ${{ matrix.node-version }}
      with:
        context: .
        file: .docker/Dockerfile
        tags: |
          ${{ env.IMAGE_NAME }}:node-${{ matrix.node-version }}
          ghcr.io/${{ env.IMAGE_NAME }}:node-${{ matrix.node-version }}
        target: node
        platforms: ${{ env.PLATFORMS }}
        push: ${{ github.event_name != 'pull_request' }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
